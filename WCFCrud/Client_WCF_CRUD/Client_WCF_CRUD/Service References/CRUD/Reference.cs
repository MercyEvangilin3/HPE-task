//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_WCF_CRUD.CRUD {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/WCF_CRUD")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNumber {
            get {
                return this.ContactNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNumberField, value) != true)) {
                    this.ContactNumberField = value;
                    this.RaisePropertyChanged("ContactNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Custid {
            get {
                return this.CustidField;
            }
            set {
                if ((this.CustidField.Equals(value) != true)) {
                    this.CustidField = value;
                    this.RaisePropertyChanged("Custid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRUD.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InsertCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/InsertCustomerDetailsResponse")]
        string InsertCustomerDetails(string firstname, string lastname, string email, string contactnumber, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InsertCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/InsertCustomerDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertCustomerDetailsAsync(string firstname, string lastname, string email, string contactnumber, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/UpdateCustomerDetailsResponse")]
        string UpdateCustomerDetails(int custid, string firstname, string lastname, string email, string contactnumber, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/UpdateCustomerDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateCustomerDetailsAsync(int custid, string firstname, string lastname, string email, string contactnumber, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/DeleteCustomerDetailsResponse")]
        string DeleteCustomerDetails(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/DeleteCustomerDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteCustomerDetailsAsync(int custid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ReadCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/ReadCustomerDetailsResponse")]
        Client_WCF_CRUD.CRUD.Customer[] ReadCustomerDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ReadCustomerDetails", ReplyAction="http://tempuri.org/IWCFService/ReadCustomerDetailsResponse")]
        System.Threading.Tasks.Task<Client_WCF_CRUD.CRUD.Customer[]> ReadCustomerDetailsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Client_WCF_CRUD.CRUD.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<Client_WCF_CRUD.CRUD.IWCFService>, Client_WCF_CRUD.CRUD.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertCustomerDetails(string firstname, string lastname, string email, string contactnumber, string address) {
            return base.Channel.InsertCustomerDetails(firstname, lastname, email, contactnumber, address);
        }
        
        public System.Threading.Tasks.Task<string> InsertCustomerDetailsAsync(string firstname, string lastname, string email, string contactnumber, string address) {
            return base.Channel.InsertCustomerDetailsAsync(firstname, lastname, email, contactnumber, address);
        }
        
        public string UpdateCustomerDetails(int custid, string firstname, string lastname, string email, string contactnumber, string address) {
            return base.Channel.UpdateCustomerDetails(custid, firstname, lastname, email, contactnumber, address);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerDetailsAsync(int custid, string firstname, string lastname, string email, string contactnumber, string address) {
            return base.Channel.UpdateCustomerDetailsAsync(custid, firstname, lastname, email, contactnumber, address);
        }
        
        public string DeleteCustomerDetails(int custid) {
            return base.Channel.DeleteCustomerDetails(custid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCustomerDetailsAsync(int custid) {
            return base.Channel.DeleteCustomerDetailsAsync(custid);
        }
        
        public Client_WCF_CRUD.CRUD.Customer[] ReadCustomerDetails() {
            return base.Channel.ReadCustomerDetails();
        }
        
        public System.Threading.Tasks.Task<Client_WCF_CRUD.CRUD.Customer[]> ReadCustomerDetailsAsync() {
            return base.Channel.ReadCustomerDetailsAsync();
        }
    }
}
